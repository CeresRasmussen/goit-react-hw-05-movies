{"version":3,"file":"static/js/495.49f935c9.chunk.js","mappings":"2OACA,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAwH,qCAAxH,EAAgL,oC,kBCI1KA,EAAe,CAAEC,MAAO,IAEjBC,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAM1B,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAQC,cAAeN,EAAcO,SAPxB,SAAC,EAAD,GAA+B,IAA5BN,EAA2B,EAA3BA,MAAWO,EAAgB,EAAhBA,UAC7BL,EAAaF,GACbO,GACD,EAIG,UACE,UAAC,KAAD,CAAMJ,UAAWC,EAAjB,WACE,SAAC,KAAD,CACEI,GAAG,QACHL,UAAWC,EACXK,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,mBAAQJ,KAAK,SAASN,UAAWC,EAAjC,UACE,6CAMX,E,iBCyBD,EArDe,WACb,IAAMU,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAciB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAItB,EAAO,CACTqB,GAAW,GACX,IAAME,EAAQ,mCAAG,WAAMvB,GAAN,0FAGLwB,EAAAA,EAAAA,IAAkBxB,GAHb,gBAELyB,EAFK,EAEbC,KAAQD,QAEVN,EAASM,GACTE,QAAQC,IAAI,QAASH,GAErBJ,GAAW,GAPI,2CAAH,sDASdE,EAASvB,EACV,CACF,GAAE,CAACA,IAOJ,OACE,iCACE,SAACC,EAAD,CAAWC,aAPM,SAAA2B,GACnBF,QAAQC,IAAI,iBAAkBC,GAC9BZ,EAASY,EACV,KAKG,yBACGT,GACC,uCAEA,+BACE,wBACGF,EAAMY,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgBvB,EAAS,EAATA,GAC5B,OACE,yBACE,SAAC,KAAD,CAAMwB,GAAE,kBAAaxB,GAAMyB,MAAO,CAAEC,KAAMpB,GAA1C,SACGiB,KAFIvB,EAMZ,YAOd,C,8LCvDK2B,EAAW,gCACXC,EAAM,mCAECC,EAAiB,mCAAG,uGAEhBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAAmDC,IAFnC,2IAAH,qDAQjBG,EAAc,mCAAG,WAAMC,GAAN,0FAEbF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,oBAC6BJ,EAD7B,oBAFa,2IAAH,sDAUdK,EAAS,mCAAG,WAAMD,GAAN,0FAERF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,4BACqCJ,EADrC,oBAFQ,2IAAH,sDAUTM,EAAY,mCAAG,WAAMF,GAAN,0FAEXF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,4BACqCJ,EADrC,2BAFW,2IAAH,sDAUZZ,EAAiB,mCAAG,WAAMxB,GAAN,0FAEhBsC,EAAAA,EAAAA,IAAA,UACRH,EADQ,gCACwBC,EADxB,iCACoDpC,EADpD,gCAFgB,2IAAH,qD","sources":["webpack://goit-react-hw-05-movie/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","components/Movies/Movies.jsx","services/api-fetches.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchForm-button\":\"Searchbar_SearchForm-button__MrOv5\",\"SearchForm-input\":\"Searchbar_SearchForm-input__LYSn6\"};","import css from 'components/Searchbar/Searchbar.module.css';\nimport { Formik, Form, Field } from 'formik';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst initialValue = { query: '' };\n\nexport const Searchbar = ({ onSubmitForm }) => {\n  const onSubmit = ({ query }, { resetForm }) => {\n    onSubmitForm(query);\n    resetForm();\n  };\n\n  return (\n    <div className={css.Searchbar}>\n      <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        <Form className={css.SearchForm}>\n          <Field\n            id=\"query\"\n            className={css['SearchForm-input']}\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n          />\n          <button type=\"submit\" className={css['SearchForm-button']}>\n            <span>Search</span>\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovieByQuery } from 'services/api-fetches';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (query) {\n      setLoading(true);\n      const getMovie = async query => {\n        const {\n          data: { results },\n        } = await fetchMovieByQuery(query);\n        setMovie(results);\n        console.log('data:', results);\n\n        setLoading(false);\n      };\n      getMovie(query);\n    }\n  }, [query]);\n\n  const onSubmitForm = searchedMovie => {\n    console.log('searchedMovie:', searchedMovie);\n    setQuery(searchedMovie);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmitForm={onSubmitForm}></Searchbar>\n      <div>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            <ul>\n              {movie.map(({ original_title, id }) => {\n                return (\n                  <li key={id}>\n                    <Link to={`/Movies/${id}`} state={{ from: location }}>\n                      {original_title}\n                    </Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'b27f2f3d79b3a6e46fc2bca972d7f174';\n\nexport const fetchPopularMovie = async () => {\n  try {\n    return await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieById = async movie_id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}movie/${movie_id}?api_key=${KEY}&language=en-US`\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchCast = async movie_id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movie_id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieByQuery = async query => {\n  try {\n    return await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["initialValue","query","Searchbar","onSubmitForm","className","css","initialValues","onSubmit","resetForm","id","type","name","autoComplete","autoFocus","placeholder","location","useLocation","useState","setQuery","movie","setMovie","loading","setLoading","useEffect","getMovie","fetchMovieByQuery","results","data","console","log","searchedMovie","map","original_title","to","state","from","BASE_URL","KEY","fetchPopularMovie","axios","fetchMovieById","movie_id","fetchCast","fetchReviews"],"sourceRoot":""}